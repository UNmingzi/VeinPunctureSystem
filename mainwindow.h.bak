#ifndef MAINWINDOW_H
#define MAINWINDOW_H

#include <QMainWindow>
#include <QThread>
#include <QTimer>
#include <QWidget>
#include <QPushButton>
#include <QVBoxLayout>
#include <QMutex>
#include <QtWidgets/QLabel>

#include "flatui.h"
#include "triopc.h"
#include "safethread.h"
#include "mythread.h"
#include "myaxesdriver.h"
#include "myalgorithm.h"


extern bool widget_flag;   //子窗口数据更新标志

extern QString labelpro;
namespace Ui {
class MainWindow;                                   //主界面更新
}

class MainWindow : public QMainWindow
{
    Q_OBJECT
public:
    explicit MainWindow(QWidget *parent = nullptr);
    ~MainWindow();

    TrioPC *pcMat;                                      //驱动器对象指针
    SafeThread *Safethread;
    MyThread *threadStop;                                  //线程对象指针
    MyAxesDriver *axesControl;                                 //轴控制指针

    Painter_widget *axis1_light;
    Painter_widget *axis2_light;
    Painter_widget *axis3_light;
    Painter_widget *axis4_light;
    Painter_widget *axis5_light;
    Painter_widget *axis6_light;
    /*界面更新函数*/
    void widgetUpdate();
    void display_axes_status();
    void nowPositionDisplay();


private slots:              //信号槽？
    void updateWatch();
    void ClickButton();
    void finishedThreadBtnSlot();
    void closeThreadBtnSlot();
    void scrollCaption();
    double* nowPosition();
    void on_closeButton_clicked();




    void on_buttonConnect_clicked();
    void on_paraAdjustButton_clicked();
    void on_radioButtonEnable_clicked();


     /*微调函数*/
    void on_xPosAdd_clicked();
    void on_xPosMinus_clicked();
    void on_yPosAdd_clicked();
    void on_yPosMinus_clicked();
    void on_zPosAdd_clicked();
    void on_zPosMinus_clicked();
    void on_yawPosAdd_clicked();
    void on_yawPosMinus_clicked();
    void on_pitchPosAdd_clicked();
    void on_pitchPosMinus_clicked();
    void on_disPosAdd_clicked();
    void on_disPosMinus_clicked();

    double* getTargetPos();

    void on_pushButton_clicked();

    void on_punctureButton_clicked();

private:
    Ui::MainWindow *ui;
    QTimer *timer;                                      //定时器
    int m_charWidth;
    int m_curIndex;
    QString m_showText;

};



#endif // MAINWINDOW_H
